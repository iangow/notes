---
title: "Linking IBES and CRSP Data"
author: Ian D. Gow
date: 2024-09-30
date-format: "D MMMM YYYY"
format:
  html:
    colorlinks: true
  pdf: 
    colorlinks: true
    geometry:
      - left=2cm
      - right=2cm
    papersize: a4
    mainfont: TeX Gyre Pagella
    mathfont: TeX Gyre Pagella Math
bibliography: papers.bib
---


IBES data with broker estimates of company earnings and CRSP data with the corresponding stock prices are often combined by linking common identifiers---particularly CUSIPs---in both datasets.
This document explains a "Linking Table" approach for merging IBES and CRSP data and provides R code.

# Introduction

Combining broker estimates of company earnings and other financials in the IBES database with stock returns and other items in the CRSP stock files requires knowledge of both data sets and how they use different company and security identification codes. 
Both databases use primary identifiers (IBES TICKER and CRSP PERMNO) that are unique in the sense that a single primary identifier is associated with each company or security.
This uniqueness feature makes querying and organizing data from these sets straightforward (as opposed to using non-unique company names, exchange tickers or CUSIPs as identifiers).
However, because these primary identifiers are specific to each database, merging or combining the IBES and CRSP sets cannot be accomplished in a simple and direct manner.

In order to merge IBES data with CRSP data, the best approach is to use common secondary identifiers to construct a 'linking table' that makes a one-to-one correspondence between the two sets of primary identifiers.
This document explains the 'linking table' approach, which can be applied to datasets other than IBES and CRSP, and provides the SAS code to accomplish this task using the IBES and CRSP datasets as an example.
*The complete code can be found in the WRDS Research Macros page under the macro `ICLINK.SAS`.*

This document is based on a document explaining SAS code found [here](https://wrds-www.wharton.upenn.edu/pages/wrds-research/applications/linking-databases/linking-ibes-and-crsp-data/).
WRDS provides a Python version of the linking code [here](https://wrds-www.wharton.upenn.edu/pages/wrds-research/applications/python-replications/linking-ibes-and-crsp-data-python/).


# Identifier Files

Both the CRSP and IBES datasets have name or identifier files (ID for IBES Detail and IDSUM for IBES Summary data, and STOCKNAMES for CRSP Stock data) that contain all companies in each dataset and provide a map between their primary identifiers (e.g. IBES TICKER and CRSP PERMNO) and all other historical identifiers (e.g. CUSIP, Exchange Ticker).
It is essential to use these name files to construct the link table.

The IBES identifier files track changes in historical company identifier information (including company name, official exchange ticker symbol, and CUSIP) for the entire IBES universe of firms (for details see the IBES Manual, page 3).
These identifier files are structured to show more than one exchange ticker or CUSIP for a company (in the appropriate cases), which increases the likelihood of a correct link between the IBES and CRSP sets.
The start date (SDATES) for each identifying record is also provided.

As of the IBES update in April 2006, the main identifier files in IBES are:

 - Detail History name file: ID File: which contains 23,808 unique US and Canadian company IBES tickers
 - Summary History name file: IDSUM File: which contains 15,576 unique US company IBES tickers
 
An important difference between ID and IDSUM is the coverage and identification of Canadian companies. While USFIRM dummy variable clearly designates US companies in IDSUM, the detail history ID file contains duplicate records for each Canadian company, with one record for USFIRM= 1 and another record for USFIRM= 0. This is due to IBES' inclusion of the Canadian estimates in both the U.S. source file and the International source file. Therefore, it is easier to identify U.S. companies in the IDSUM set.

Since CRSP only tracks securities that are traded in major American exchanges, non-US companies should be eliminated from IBES sample before starting with the matching process.
For this reason, it is more appropriate to use IDSUM in linking with CRSP.
(For more information about IBES datasets, see the IBES Manual, IBES Overview, and IBES dataset list on WRDS).

## Relevant CRSP variables

The `crsp.stocknames` file provides a map between CRSP permanent identifiers and all historical CUSIPs, company names, and exchange tickers, along with their effective date ranges. 
The following CRSP variables will be used in linking IBES with CRSP:

 - `permno` is the unique identifier for CRSP securities. Similar to IBES TICKER, PERMNO does not change over time even if the company changes its name, CUSIP and exchange ticker.
 - `ticker` is the exchange ticker in CRSP data, and it is analogous to `oftic` in IBES.
 However, `ticker` may be a truncated version of the actual trading symbol when it has additional share class character(s) or more than 5 characters.
 (For more information on the CRSP exchange ticker, see the CRSP Manual page 104.)
 - `comnam` is the company name in CRSP at a specific point in time.
 - `ncusip` is the 8-digit historical CUSIP in CRSP data is analogous to IBES's CUSIP.
 CRSP also has another header variable named `cusip`, which should not be used in linking with IBES, as `cusip` only reflects the most recent company CUSIP for the entire company time series.
 - `namedt` and `nameenddt` are the first and last effective dates of each set of name structure, which consists of CUSIP, Company Name, Exchange Code, Exchange Ticker, Share Class, and SIC Code.
 Each PERMNO has at least one name structure in STOCKNAMES file.

## Alternative approaches to linking IBES and CRSP data
The chart below describes the three common company identifiers that can be used to link IBES TICKERs and CRSP PERMNOs: 1) the exchange ticker symbol, 2) company name, 3) and CUSIP number.

*linking-ibes-and-crsp-data-625-350-001*

1. Linking by company name: This approach is difficult because the two databases might record a company's name in a different manner.
In particular, IBES excessively abbreviates company names.
For example, while IBM's company name in CRSP is `INTERNATIONAL BUSINESS MACHS COR`, IBES records IBM as `INTL BUS MACH`.
Therefore, it is very difficult to write a reliable linking program that uses company names.
Still, company names can be used to score links as an additional check.

2. Linking by exchange ticker:
One problem with tickers is that they are exchange specific (i.e. not always standardized for a company) and some databases alter exchange tickers by truncating or adding suffixes.
This problem is exacerbated by the ticker reuse overtime.
In fact, discarded tickers for delisted securities are often reused for newly listed companies at a later date.
For this reason, it is crucial to use ticker effective dates when linking by ticker.
Also, scoring those links is essential (e.g. using company names, or 6- digit CUSIPs), as linking by tickers might produce some incorrect matches.

3. Linking by CUSIP: 
CUSIP is the best common secondary identifier to use in linking IBES and CRSP.
IBES CUSIP and CRSP NCUSIP are both 8-digit symbols.
CUSIP has an advantage that its first 6 digits constitute the company identifier and the next 2 digits are issue specific.
Every company's stock issue has a unique and distinct 8-digit CUSIP number that will never be reassigned to other companies or issues, even if the original company stock is delisted or discontinued. While CRSP data (e.g. price, returns, and shares outstanding) are issue specific, IBES provides earnings estimates, summary estimates, and recommendations that are company specific. However, most useful IBES figures (e.g. EPS estimates) are scaled by shares outstanding. Therefore, linking IBES with CRSP should be established by using the entire 8-digit CUSIP, in order to accurately link security specific information.

Top of Section

CUSIP Method to Link IBES TICKERS and CRSP PERMNOs
The first step is to generate a complete list of the IBES TICKERs for US companies along with all associated historical CUSIPs. The USFIRM variable can be used to subset for all US companies tracked by IBES. Only observations with non-missing CUSIP are retained. In the code below, the start dates of the historical CUSIPs and company names will be used to flag CUSIP links.

Below is the code to generate the complete list of the IBES TICKERs for all U.S. companies tracked by IBES (15,581 as of April 2006):

```{r}
#| message: false
library(tidyverse)
library(DBI)
library(farr)
```

```{r}
db <- dbConnect(duckdb::duckdb())
```

```{r}
idsum <- load_parquet(db, "idsum", "ibes")
stocknames <- load_parquet(db, "stocknames", "crsp")
```

```{r}
ibes_cusips_raw <-
  idsum |>
  filter(usfirm == 1, !is.na(cusip)) |>
  select(ticker, cusip, cname, sdates)
```

In preparing the map between IBES TICKER and CUSIP, the rows with duplicate CUSIP information for each IBES TICKER should be deleted. The SDATES variable for the company identifying information tracks start dates for CUSIP, company name, exchange ticker, exchange code, and other identifiers. For this reason, we need to arrange the SDATES variable to track the first and last ‘start dates' for each specific CUSIP record. We keep one record per IBES TICKER – CUSIP combination, retaining the most recent company names which will be later compared with the CRSP latest names of the matching companies in producing link scores.

**Here the R code differs from the SAS code, as SAS allows for `group_by()` aggregation to include variables in neither the `group_by()` nor the `summarize()`.
Standard SQL implementations do *not* allow this, as it creates ambiguity, and we will not use this.**

```{r}
ibes_cusip_dates <-
  ibes_cusips_raw |>
  group_by(ticker, cusip) |>
  summarize(fdate = min(sdates, na.rm = TRUE),
            ldate = max(sdates, na.rm = TRUE),
            .groups = "drop")

ibes_cusips <-
  ibes_cusips_raw |>
  distinct(ticker, cusip, cname) |>
  inner_join(ibes_cusip_dates, by = join_by(ticker, cusip))
```

Similarly, we will prepare the CRSP PERMNO – CUSIP set using the STOCKNAMES dataset.
Mapping all CRSP securities, STOCKNAMES contains the identifying information, including CUSIP, company name, and exchange ticker, in addition to their effective start and end dates.
The data needs to be arranged by deleting rows with duplicate CUSIP information for each PERMNO, and constructing an effective date range for each historical CUSIP.

```{r}
crsp_cusips_raw <-
  stocknames |>
  filter(!is.na(ncusip)) |>
  select(permno, ncusip, comnam, namedt, nameenddt)

crsp_cusip_dates <-
  crsp_cusips_raw |>
  group_by(permno, ncusip) |>
  summarize(namedt = min(namedt, na.rm = TRUE),
            nameenddt = max(nameenddt, na.rm = TRUE),
            .groups = "drop")

crsp_cusips <-
  crsp_cusips_raw |>
  distinct(permno, ncusip, comnam) |>
  inner_join(crsp_cusip_dates, by = join_by(permno, ncusip))
```


```{r}
cusip_link_raw <-
  ibes_cusips |>
  left_join(crsp_cusips, join_by(cusip == ncusip)) |>
  collect()
```

```{r}
n_tickers <-
  cusip_link_raw |>
  distinct(ticker) |>
  count() |>
  pull()

n_matched1_1 <-
  cusip_link_raw |>
  filter(!is.na(permno)) |>
  summarize(n_distinct(ticker)) |>
  pull()
```

Linking by CUSIP is very effective as it produces a large number of potentially accurate matches.
Using CUSIP alone, `r prettyNum(n_matched1_1 / n_tickers * 100, digits = 2)`% of US companies in the IBES database (actually `r prettyNum(n_matched1_1, big.mark = ",")` different IBES TICKERs) were linked to a CRSP identifier.
  
Using CUSIP date range conditions in matching the IBES and CRSP identifiers is of little benefit, as CUSIPs are not reused over time (i.e. they are not assigned to other companies after original company is delisted or ceases to exit).
Therefore, linking by CUSIP is not expected to yield many, if any, erroneous matches.
Still, scoring and reassessing CUSIP links using CUSIP date ranges along with company names may determine that a company was assigned the wrong CUSIP in one of the datasets.

It is important to note that IBES `sdates` does not seem to be as accurate in recoding effective dates for name changes as the CRSP's `namedt`.
For example, DELL COMPUTER CORP changed its name and CUSIP in 2003 to DELL INC, and CRSP shows the effective date for the name change as July 22nd, 2003, while IBES recorded the name change on August 14th, 2003.
Based on additional research, it seems that the July date is more accurate, but in this case the difference is trivial and inconsequential.
In other cases the differences in dates is large and in either type of case it is best to not require exact overlapping date ranges.

Below is SAS code that scores CUSIP links and identifies cases with non-intersecting CUSIP date ranges or with substantially different company names. 
The `score` variable is constructed to impose a penalty on links that are less than perfect and high `score` values need further checking. The `score`  variable is 0 and determined to be ‘best' when the linked CUSIP has intersecting dates and matching company names.
Small differences in company names (CNAME in IBES and COMNAM in CRSP) can be checked for and tolerated using `spedis()`, which mimicks the spelling distance function in SAS. 
SPEDIS (cname,comnam)=0 is a perfect score and SPEDIS < 30 is usually good enough to be considered a name match. 
Matches with intersecting CUSIP dates ranges but with substantially different companies names are assigned a score level of 1.

In this exercise, 200 cases with non-intersecting CUSIP dates are identified.
These matches are further explored by calculating the spelling distance between IBES and CRSP company names.
Those cases are assigned a score level of 2 if company names match, and 3 otherwise.

```{r}
spedis <- function(x, y) {
  left <- adist(x, y)[1, 1]
  right <- adist(y, x)[1, 1]
  min(left, right)
}

#library(stringdist)
cusip_link <- 
  cusip_link_raw |>
  group_by(ticker, permno) |>
  arrange(ldate) |>
  filter(row_number() == max(row_number())) |>
  mutate(name_dist = spedis(cname, comnam),
         score = case_when(!(ldate < namedt | fdate > nameenddt) & name_dist < 30 ~ 0,
                           !((ldate < namedt) | (fdate > nameenddt)) ~ 1,
                           name_dist < 30 ~ 2,
                           .default = 3)) |>
  ungroup() |>
  select(ticker, permno, cname, comnam, score)
```


```{r}
cusip_link |> count(score)
```

# Exchange Ticker Method to Link IBES TICKERs and CRSP PERMNOs

Linking by CUSIP is superior and more error-proof than a matching routine that relies solely on ticker symbols.
Yet, a ticker link can be used with databases that do not have historical CUSIP information.
Also, linking by ticker might produce some matches that are not linked using CUSIP alone, because of wrong or different CUSIP designations across various databases. 
The first step in linking by ticker is to generate a file that contains all historical exchange tickers (OFTIC) with their start dates for each IBES TICKER:

```{r}
ibes1 <-
  idsum |>
  filter(usfirm == 1, !is.na(oftic)) |>
  select(ticker, oftic, cusip, cname, sdates)
```

```{r}
ibes_dates <-
  ibes1 |>
  group_by(ticker, oftic) |>
  summarize(fdate = min(sdates, na.rm = TRUE),
            ldate = max(sdates, na.rm = TRUE),
            .groups = "drop")

ibes2 <-
  ibes1 |>
  distinct(ticker, oftic, cname) |>
  inner_join(ibes_dates, by = join_by(ticker, oftic))
```

To generate the list of CRSP historical tickers for each CRSP PERMNO with their effective ticker date ranges, use the following lines:

```{r}
crsp1 <-
  stocknames |>
  filter(!is.na(ncusip)) |>
  select(permno, ticker, comnam, namedt, nameenddt)

crsp2 <-
  crsp1 |>
  group_by(permno, ticker) |>
  summarize(namedt = min(namedt, na.rm = TRUE),
            nameenddt = max(nameenddt, na.rm = TRUE),
            comnam = last(comnam),
            .groups = "drop")
```


```{r}
link_2_1 <-
  ibes2 |>
  left_join(crsp2, join_by(oftic == ticker,
                           ldate >= namedt,
                           fdate <= nameenddt)) |>
  collect()
```



```{sas}
#| eval: false
* Linking By Ticker;
proc sort data=CRSP.STOCKNAMES out=CRSP1 (keep=PERMNO ticker comnam namedt nameenddt ncusip);
  where not missing(ticker);
  by PERMNO ticker namedt;
run;

* Arrange company tickers and their actual date ranges, and rename CRSP Exchange Ticker to avoid confusion with IBES TICKER;
proc sql;
  create table CRSP2 as 
  select PERMNO, ticker as CRSP_ticker, comnam, ncusip, 
    min(namedt)as namedt,max(nameenddt) as nameenddt
  from CRSP1
  group by PERMNO, ticker
  order by PERMNO, ticker, namedt;
quit;

* Keep the observation with the last company name for each PERMNO Exchange Ticker Combination;
data CRSP2;
  set CRSP2;
  by PERMNO CRSP_ticker;
  if last.CRSP_ticker;
  label namedt="Start date of ticker record";
  label nameenddt="End date of ticker record";
  format namedt nameenddt date9.;
run;
```

Since the same ticker can be reused for different companies overtime, intersecting ticker date conditions should be imposed along with the ticker match criteria, as appears in the code below:

```{sas}
#| eval: false
* Create Link Table;
proc sql;
  create table LINK2_1
  as select *
  from IBES2 as a, CRSP2 as b
  where a.oftic = b.CRSP_ticker and (ldate>=namedt) and (fdate<=nameenddt)
  order by TICKER, PERMNO, ldate;
quit;
```
Company names and 6-digit CUSIPs can be used to supplement the ticker match. 
s before, scores (penalties) are calculated by checking the spelling distance between matched company names in IBES and CRSP and the company CUSIP identifier (first 6- digit of the historical CUSIP).
Even though IBES company names are usually spelled differently than CRSP as IBES tends to excessively abbreviate company names, this check can be very useful in cases where two companies have the same tickers in close time ranges.
For example: the erroneous match by ticker and ticker effective date between the IBES company CROSSLAND SVG LTD (IBES ticker CRLD) and the CRSP company CAPITAL REALTY INV TAX EX FD II (CRSP PERMNO 79441) will have a higher spelling distance compared with the correct CRSP match (CROSSLAND SAVINGS FSB BROOKLYN with PERMNO: 87090) when adding the spelling distance check.

Ticker links with matching 6-digit CUSIPs and company names are deemed as good as CUSIP links with matching CUSIP dates and company names, and therefore assigned a score level of 0. Companies with higher score levels may need further checks before using them.

```{sas}
#| eval: false
* Scoring Links;
data LINK2_2;
  set LINK2_1;
  by TICKER PERMNO;
  if last.PERMNO; * Keep link with most recent company name;
  name_dist = min(spedis(cname,comnam),spedis(comnam,cname));
  if substr(cusip,1,6)=substr(ncusip,1,6) and name_dist < 30 then SCORE=0;
  else if substr(cusip,1,6)=substr(ncusip,1,6) then score = 4;
  else if name_dist < 30 then SCORE = 5;
  else SCORE = 6;
  keep TICKER PERMNO cname comnam score;
run;
```

Using this ticker link, we could associate around 91% of the IBES sample companies (around 14,137 different IBES TICKERs).
It is important to stress that a high match rate does not necessarily imply that all Exchange Ticker links are correct.
A matching that uses the IBES Exchange Ticker is more susceptible to erroneous links because of the differential conventions and assignments of exchange tickers in various databases.
The following section contains an example that tests the accuracy and error rates for CUSIP and Exchange Ticker Links that were manually verified for a random sample of 100 companies.

# Matches, Failures, and Error Rates

In order to check the accuracy rates of the different linking methods, we generate a random sample of 100 US companies (as it is not feasible to proof all 14,000+ matches between IBES and CRSP samples). To do this, one can use the following code to generate a random sample of exactly 100 observations:

```{sas}
#| eval: false
* Get the list of IBES TICKERs of US Firms;
proc sort data=IBES.IDSUM out=ALLSAMPLE (keep=TICKER) nodupkey;
  where USFIRM=1;
  by ticker;

data RANDOM;
  set ALLSAMPLE nobs=n;
    retain w rem;
    if _n_=1 then do;
  
    * Desired sample: 100 observations;
    w = 100;
    rem=n;
  end;

  * To calculate w/o replacement probability;
  p = w/rem;

  * To generate random binary variable: users can change the seed;
  dum=(uniform(123321)<=p);

  * Adjusting numerator for the next stage probability;
  if dum then w=w-1;
  rem=rem-1;
  if dum;
  keep TICKER;
run;
```
Using the sample of 100 randomly selected IBES companies, we notice that matching by CUSIP is far superior. The results are comparable to entire sample match outcomes. We get around 96% matches with CRSP companies with a 0% error rate.

**Table 1. Comparison of Various Matching Methods**
Method	Identifiers Used	Starting Sample	Unmatched	Matched	Verified Match	Matched but Erroneous
1	CUSIP alone	100	4	96	96	0
2	Ticker and dates	100	11	89	85	5
3	Ticker and dates and company name	100	11	89	86	4
In addition to the methods presented earlier, we can use a sequential linking procedure that uses various identifier combinations to exhaust all possible matches between IBES and CRSP databases. In sequential matching, the goal is to get the best matches out of every linking approach. Notice here that using our 100 company random sample, matching by CUSIP was more than sufficient to get all possible matches in CRSP of the 100 IBES companies. In other cases, the additional steps will find valid links.

**Table 2: Sequential Matching**

# Finalizing and Saving an IBES-CRSP Link Table
The SAS code below creates a final link table, `iclink`, and saves the results (in this case the WRDS users' home directory) in order to allow for further use when merging CRSP and IBES data.
In order to exhaust all possible matches, this code uses both CUSIP and TICKER matching methods sequentially.
Therefore, it builds on the advantages of CUSIP links and supplements them with additional ticker links.

```{sas}
#| eval: false
proc sql;
  create table ticklinks
  as select *
  from link2_2
  where ticker not in (select ticker from link1_2);
quit;

/* Create final link table and save it in home directory */
libname home '~';
data home.iclink;
  set link1_2 ticklinks;
  label CNAME = "Company Name in IBES";
  label COMNAM = "Company Name in CRSP";
  label SCORE = "Link Score: 0(best) - 6";
run;

proc sort data=home.iclink;
  by ticker permno;
run;
```

We found that after getting a high match rate using CUSIP, a Ticker match on the remaining companies yielded 136 additional links raising the count to 14,727 matches saved in the ICLINK file. The ICLINK table looks like the example below. Each IBES companies with an IBES TICKER symbol is linked to a CRSP PERMNO, and scored depending on the different characteristics discussed earlier.

**Some table**

Note that the SCORE levels are lower for better matches and higher for links that may need further checking before using the results to merge CRSP and IBES data.
In computing the score, a CUSIP match is considered better than a TICKER match. The score also includes a penalty for differences in company names, CNAME in IBES and COMNAM in CRSP.
The name penalty is based upon SPEDIS, which is the spelling distance function in SAS. SPEDIS (cname,comnam)=0 is a perfect score and SPEDIS < 30 is usually good enough to be considered a name match.

The SCORE levels are:

- 0 is the BEST match
- 1 is the score for cases with matching CUSIPs and CUSIP dates but with substantially different company names
- 2 is the score for cases with matching CUSIPs and company names but with nonintersecting CUSIP dates
- 3 is the score for CUSIP matches that have non-intersecting CUSIP dates and substantially different company names
- 4 is the score for cases with matching exchange tickers and 6-digit CUSIPs but with substantially different company names
- 5 is the score for cases with matching exchange tickers and company names but with different 6-digit CUSIPs
- 6 is the score for cases with matching exchange tickers but with substantially different company names and 6-digit CUSIPs


# Using Link Tables to Merge IBES and CRSP Data

Once the link table is created and saved to the home directory, then it is easy to merge IBES with CRSP data.
For example, in order to merge a CRSP monthly stock data with an IBES recommendation summary statistics data, use the following PROC SQL statement:

```{sas}
#| eval: false
* Merging IBES and CRSP datasets using ICLINK table;
proc sql;
  create table IBES_CRSP as 
  select a.ticker, a.STATPERS, a.meanrec, c.permno, c.date, c.ret 
  from ibes.recdsum as a, home.ICLINK as b,
    crsp.msf as c
  where a.ticker=b.ticker and b.permno=c.permno and 
    intnx('month',a.STATPERS,0,'E') = intnx('month',c.date,0,'E');
quit;
```

One can always modify the conditions in the "where" statement to accommodate more sophisticated and customized merges.

# Summary of IBES-CRSP Links

In summary, linking IBES data with CRSP data by making use of common CUSIP values is the most powerful technique, as it produces matches for 94% of the IBES sample for U.S. companies.

**Summary table of matching outcome using CUSIP and ticker linking techniques**

