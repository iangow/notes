---
title: "Replicating the 'coding error' in BKLYZ1"
format: pdf
bibliography: papers.bib
---

In this short note, I try to recreate the "coding error" in @Bao:2020aa that was corrected by @Bao:2022aa.

To do this, I will use the `tidyverse` package.^[Install this using the command `install.packages("tidyverse")` in R, if necessary.]

```{r, message=FALSE}
library(tidyverse)
```

## The source data sets

[PDF-rendered SAS course code](https://github.com/JarFraud/FraudDetection/blob/master/SAS%20coding.pdf) supplied by BKLYZ suggests that the final data set used in @Bao:2020aa was constructed by merging data on AAERs (`aaer_firm_year`) with data on raw Compustat variables (`compustatindustrial7815`).
To reproduce the "coding error", we need to retract this merge of two tables.

While BKLYZ provide a file [`AAER_firm_year.csv`](https://github.com/JarFraud/FraudDetection/blob/master/AAER_firm_year.csv), it is easy to show that this was not the data file used to create the @Bao:2020aa.^[See [here](https://gist.github.com/iangow/5d3843749de9793025618fab53e7f263) for details. 
In short, the final data set used in @Bao:2020aa contains AAERs not found in `AAER_firm_year.csv`.]

As such, we use the "final" data set used by @Bao:2020aa and reconstruct the relevant portions of the source data sets from that.

```{r}
jar_data <-
    read_csv(paste0("https://raw.githubusercontent.com/JarFraud/",
                    "FraudDetection/master/",
                    "data_FraudDetection_JAR2020.csv"),
             col_types = "d") %>%
    mutate(gvkey = str_pad(gvkey, 6, side = "left", pad = "0"),
           fyear = as.integer(fyear),
           p_aaer = as.character(p_aaer))
```

We first construct the original `aaer_firm_year` data set by filling in any gaps in firm-years for an AAER found in `jar_data`.

```{r}
aaer_firm_year <-
    jar_data %>%
    filter(!is.na(p_aaer)) %>%
    group_by(p_aaer, gvkey) %>%
    summarize(min_year = min(fyear), max_year = max(fyear), 
              .groups = 'drop') %>%
    rowwise() %>%
    mutate(fyear = list(seq(min_year, max_year, by = 1))) %>%
    unnest(fyear) %>%
    select(gvkey, fyear, p_aaer) 
```

As we can see here, `aaer_firm_year` is the panel data set of firm-years affected by AAERs.

```{r}
head(aaer_firm_year)
```

### Firm-years with Compustat features

We next construct the data set `comp_firm_years`, which represents the firm-years in the @Bao:2020aa sample.
These will be missing some of the firm-years in `aaer_firm_year` because of missing items on Compustat.

```{r}
comp_firm_years <-
  jar_data %>%
  mutate(missing = 1L) %>%
  select(fyear, gvkey, missing)
```

### The "coding error"

Now that we have the two data sets `aaer_firm_year` and `comp_firm_years`, we can reproduce the "coding error" from @Bao:2020aa.

The first step is to merge `aaer_firm_year` with `comp_firm_years` using the `left_join` function so that all observations on `aaer_firm_year` are retained even if there is no match on `comp_firm_years`.
The cases where there is no match on `comp_firm_years` are indicated by the variable `missing`.

```{r}
aaer_merged <-
  aaer_firm_year %>%
  left_join(comp_firm_years, by = c("gvkey", "fyear")) %>%
  mutate(missing = coalesce(missing, 0L)) %>%
  select(gvkey, fyear, p_aaer, missing)

head(aaer_merged)
```

Now we can recode AAERs following @Bao:2020aa.
We do this by calculating `sum_gap`, a running sum of the indicator variable for one plus the number of gaps in the sample for a given AAER.^[A "gap" is indicated by `lag_missing` being `1` and `missing` being zero.]
This will start at `1` and increase to `2` after a "gap".
We then create the variable `new_p_aaer` by combining the original AAER identifier (`p_aaer`) with `sum_gap`.

```{r}
aaer_sum_gap <-
  aaer_merged %>%
  group_by(gvkey, p_aaer) %>%
  arrange(fyear) %>%
  mutate(lag_missing = coalesce(lag(missing), 0),
         sum_gap = cumsum(lag_missing & !missing) + 1,
         new_p_aaer = paste0(p_aaer, 
                             as.character(sum_gap))) %>%
  select(gvkey, fyear, p_aaer, new_p_aaer) %>%
  ungroup()
```

If successful, my code reproduces the "coding error" in @Bao:2020aa in about 14 lines of code.^[The exact number depends on how one counts a line.]

### Verifying the reproduction of the "coding error"

To check that we have successfully reproduced the "coding error" corrected by @Bao:2022aa, we can reproduce Figure 2 of @walker2021critique, which we do with the following code.

```{r}
walker_fig_2 <-
    aaer_sum_gap %>% 
    group_by(p_aaer) %>% 
    filter(n_distinct(new_p_aaer) > 1) %>%
    inner_join(comp_firm_years, by = c("gvkey", "fyear")) %>%
    pivot_wider(names_from = "fyear", id_cols = "p_aaer", 
              values_from = "new_p_aaer") %>%
    ungroup() %>%
    arrange(as.integer(p_aaer)) %>%
    mutate(across(`1991`:`2014`, ~ coalesce(., ""))) 
```

For reasons of space, we only include a portion of the table.

```{r}
walker_fig_2 %>%
    select(p_aaer, `1995`:`2004`) %>%
    knitr::kable()
```

Careful comparison of my data with Figure 2 of @walker2021critique suggests that I have almost perfectly reproduced the "coding error" of @Bao:2020aa.
The one exception is that my table omits the AAER with `p_aaer` of `2957`.

Examining the underlying data, it seems that the issue here is the presence of multiple AAERs for the related firm for 2000 and 2001.

```{r}
aaer_firm_year %>% 
    filter(gvkey == "064630") %>% 
    arrange(fyear)
```

Returning to the SAS code supplied with @Bao:2020aa, we see the following lines:

```sas
PROC SORT DATA=temp nodupkey;
BY gvkey fyear; RUN;
```

This code would have the effect of (essentially randomly) deleting data on one AAER for any firm-year where two AAERs apply.
It is unclear whether the BKLYZ team would characterize this second basis for recoding AAERs as a research design choice [as the coding error was arguably characterized in  @Bao:2021] or as an error like the "coding error" replicated above.

The use of `PROC SORT nodupkey` is common in accounting reserarch, but in general this is a problematic practice.^[Issues associated with this practice are explored in discussion questions [here](https://iangow.github.io/far_book/natural-revisited.html).]

### References {-}
